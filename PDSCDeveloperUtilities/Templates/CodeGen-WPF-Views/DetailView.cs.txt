using <|NAMESPACE|>.DataLayer;
using <|NAMESPACE|>.EntityLayer;
using <|NAMESPACE|>.ViewModelLayer;
using <|NAMESPACE|>.WPF.BaseClasses;
using PDSC.Common;
using System.Net;
using System.Threading.Tasks;
using System.Windows;

namespace <|NAMESPACE|>.WPF.Views;

public partial class <|CLASS_NAME|>DetailView : UserControlBase
{
  public <|CLASS_NAME|>DetailView()
  {
    InitializeComponent();

    // Assign DataContext of this UserControl to the View Model
    DataContext = ViewModel;
  }

  public <|CLASS_NAME|>ViewModel ViewModel { get; set; } = new();
  public <|CLASS_NAME|> CurrentEntity { get; set; } = new();

  protected void InitViewModel()
  {
    // Create Repository for View Model
    if (_MainWindow != null) {
      ViewModel.Repository = new <|CLASS_NAME|>Repository(_MainWindow.Settings.DbContext);      

      {|REMOVE_WHEN:NoForeignKeys|}
      // Set FK Repositories
      {|END_REMOVE|}
      {|FOR EACH FK_TABLE|}
      ViewModel.<|CLASS_NAME_SINGULAR|>Repository = new <|CLASS_NAME_SINGULAR|>Repository(_MainWindow.Settings.DbContext);
      {|END_LOOP|}
    }
  }

  private async void UserControl_Loaded(object sender, RoutedEventArgs e)
  {
    // Initialize View Model
    InitViewModel();

    ViewModel.IsAdding = IsAdding;
    if (IsAdding) {
      // Create new Entity
      ViewModel.CurrentEntity = ViewModel.CreateEmpty();
      {|REMOVE_WHEN:IsAutoIncrementOrIsPrimaryKeyNotInteger|}
      // Generate the next id
      if (_MainWindow != null) {
        ViewModel.CurrentEntity.<|PK_PROPERTY_NAME|> = _MainWindow.Settings.DbContext.<|CLASS_NAME_PLURAL|>.Max(row => row.<|PK_PROPERTY_NAME|>) + 1;
      }
      {|END_REMOVE|}
    }
    else {
      // Set Detail Object into View Model
      await Task.Run(() => ViewModel.CurrentEntity = CurrentEntity);
    }

    {|REMOVE_WHEN:NoForeignKeys|}
    // Load Foreign Keys
    {|END_REMOVE|}
    {|FOR EACH FK_TABLE|}
    await ViewModel.Load<|CLASS_NAME_PLURAL|>Async();
    {|END_LOOP|}
  }

  {|REMOVE_WHEN:IsView|}
  private async void SaveButton_Click(object sender, RoutedEventArgs e)
  {
    DataResponse<EntityLayer.<|CLASS_NAME|>> response = await ViewModel.SaveAsync();

    if (response.StatusCode == HttpStatusCode.Created ||
        response.StatusCode == HttpStatusCode.OK) {
      GoBack();
    }
  }
  {|END_REMOVE|}
  private void CancelButton_Click(object sender, RoutedEventArgs e)
  {
    GoBack();
  }
}
