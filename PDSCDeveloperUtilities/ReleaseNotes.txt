PDSC Developer Utilities v9.1.1 - 1/2/2024
-----------------------------------------------------
Fixed up all the files generated into the _DoNotAddToProject-Includes folder after generation
  Made sure the appropriate things to add into exiting projects is updated
  Updated the documentation with how to add new tables/views after you have already generated a project
  Deleted the following templates
    Templates/CodeGen-DataClasses-EF/DbContextMultiplePKs.txt
    Templates/CodeGen-MAUI-Views/ProgramDI.txt
    Templates/CodeGen-WebAPI-MVC-Controllers/ServiceExtensionRepositories.txt
  Added new templates
    Templates/CodeGen-MAUI-Views/ProgramDITables.txt
    Templates/CodeGen-MAUI-Views/ProgramDIViews.txt
    Templates/CodeGen-MVC-Views/ProgramDITables.txt
    Templates/CodeGen-MVC-Views/ProgramDIViews.txt
    Templates/CodeGen-Minimal-WebAPI-Router/RepositoriesTables.txt
    Templates/CodeGen-Minimal-WebAPI-Router/RepositoriesViews.txt
    Templates/CodeGen-WebAPI-MVC-Controllers/RepositoriesTables.txt
    Templates/CodeGen-WebAPI-MVC-Controllers/RepositoriesViews.txt
    Templates/CodeGen-WPF-Views/MainWindowTables.txt
    Templates/CodeGen-WPF-Views/MainWindowViews.txt



PDSC Developer Utilities v9.1.0 - 12/??/2023
-----------------------------------------------------
BREAKING CHANGES!
  Modified the IRepository interface so it now includes the primary key data type
  Remove the IRepositoryOtherPK interface
  Modified all templates to reflect the above change

Misc. Changes
  Added code to delete the *.http file created in Web API projects
  Changed the Hard-Coded generator to emit dates as new DateTime(year, month, day) instead of using Convert.ToDateTime()
  Changed tab on Computer Cleaner from "After Generation =>" to "After Cleaning =>"
  Changed the LanguageDataTypes.xml to better handle null strings in the AddWhereClause() method of the Repository class
  Removed the <RepositoryInterace> and <ViewModelInterface> elements from the LanguageDataTypes.xml file

WPF generation
  Changed the IsVisible to Visibility in the List & Detail Views

MVC Website Generation
  Fixed bug where the wrong DbContext name was used

Minimal Web API Generation
  Modified the Program.cs to put ConfigureCors before calling Authentication and Authorization
  Added AppRouterBase.cs file
  All Router classes now inherit from AppRouterBase
  Added IRepositoryBase.cs file
  All IRepository*.cs interfaces inherit from an IRepositoryBase interface
  Added some additional properties to support JWT Bearer Tokens in the CommonBase class
  Added some additional properties to support JWT Bearer Tokens in the RepositoryBase class
  Added some additional properties to support JWT Bearer Tokens in the ViewModelBase class
  Added code to RouterBase class to support in-memory caching
  Made many changes to the HttpClientRepositoryBase class to support JWT authentication and ability to pass in extra information on the URL line
  Modified the ConfigureCors() in SecurityExtensions.cs file - .AllowAnyMethod().AllowAnyHeader();
  Modified the View Model Template to call the SetRepositoryData() method in the ViewModelBase to help support JWT tokens
  Modified Program.cs to add memory caching


PDSC Developer Utilities v9.0.6 - 11/27/2023
-----------------------------------------------------
Code Generation
  Fixed bug where if a table is a reserved word in SQL Server, it can't generate
  Fixed bug in the Minimal Web API solution creation .cmd file where it was using the wrong solution name
  Fixed bug in the GetAsync() method where a table is empty, and does not have auto-incrementing PK, it would cause an exception
  Fixed bug in creating label names for columns
  Changed the SetValues() method to be protected scope
  Changed setting the IsTelephone property to true only when the property name is Phone, PhoneNumber, Telephone, or TelephoneNumber
  Fixed up various styles in .NET MAUI and WPF generated code
  Eliminated all "Enabled" properties in the View Model Commands classes as they are not being used
  Replaced some hard-coded names with <|NAMESPACE|> and <|APPLICATION_NAME|>



PDSC Developer Utilities v9.0.5 - 11/18/2023
-----------------------------------------------------
Code Generation
  Added button to clear all stored table/view data
  Added more error handling, changed some messages, added more data validation
  Added tokens {|REMOVE_WHEN:net8.0|} and {|REMOVE_WHEN:net7.0|}
  Added {|FOR EACH COLUMN:IsForeignKey|} and {|FOR EACH COLUMN:IsNotForeignKey|} tokens
  Clear the table/view grid when the connection string changes
  Fixed bug when generating Entity class and the property name is changed, but the lower case version of the property name was not changing to the new value
  Fixed bug when generating Minimal Web API router class and the property name for the primary key was different from the field name.
  Created a console app utility that runs as part of the .cmd file for projects to fix up URLs and make the generation process more automated
  Updated all Instructions that appear after generation to reflect the new process
  The .cmd file is now deleted after it runs

.NET MAUI Generated Applications
  Added the ability to generate .NET MAUI using the Minimal Web API for data access
  Fixed the warnings in the *ViewModelCommands classes for the ICommand objects
  Fixed a bug in MAUI generation where FK drop-downs were not set when adding a new record
  Added code to the .NET MAUI Detail View code-behind for those tables have an integer PK, but not using auto-increment.
  Added a PDSC.Common.MAUI class library with a inverted boolean converter class
  For .NET MAUI list views, disabled buttons until all data has been loaded
  Added an area where exceptions are displayed on list and detail pages
  Buttons are disabled until all the data loads

Minimal Web API Generated Applications
  Fixed a bug in the minimal web api router InsertAsync() method where the 'entity' variable was being returned instead of the 'response' variable

MVC Generated Applications
  Added code to the MVC controllers for those tables have an integer PK, but not using auto-increment.
  Can now generate foreign key editing fields for MVC applications

WPF Generated Applications
  Fixed a bug in WPF generation where FK drop-downs were not set when adding a new record 
  Added code to the WPF Detail View code-behind for those tables have an integer PK, but not using auto-increment.
  Added AppStyles.xaml and AppColors.xaml to the generated WPF project
  Added an area where exceptions are displayed on list and detail pages
  Buttons are disabled until all the data loads


PDSC Developer Utilities v9.0.4 - 11/14/2023
-----------------------------------------------------
Code Generation - Stored Procedure Generation
  Added ability to generate stored procedures to handle all CRUD logic, plus searching and counting rows
  Added SpPrefix to PDSCCodeGen.config file and set value to usp_
  Added <|SP_PREFIX|> token
  Added <|AND_UPPER|> token
  Added <|OR_UPPER|> token

Code Generation: MVC
  Fixed up the CSS class names for Bootstrap V5.1

Code Generation
  Views were not being read in from their .json file on disk, that is now fixed
  Disabled Generate? check box if a table can't be generated (such as one that has multiple primary keys)
  Added a CodeGen-DotNetVersions.xml file with the currently supported versions of .NET
  Added a ComboBox to the Generate tab to allow you to select a .NET version to target for the generated code
  Added <|DOT_NET_VERSION|> token
  Added <|DOT_NET_VERSION:[NuGetPackage]|> token to allow you to get a value for the <Element> that matches the 'NuGetPackage' in the CodeGen-DotNetVersions.xml
  Modified all generated .cmd files to use the <|DOT_NET_VERSION|> and <|DOT_NET_VERSION:[XmlElementName]|> tokens

SQL Compare
  Added a Grid to display the changed data
  Both connection strings are stored for future use
  Connection strings are stored in the configuration file
  Fixed a couple of issues with detection of changes

XML File Editing
  Added an XML editing screen to maintain .NET Versions


PDSC Developer Utilities v9.0.3 - 11/12/2023
-----------------------------------------------------
Added the following XML Editing Screens to the XML List Tool
  Language Data Types
  Languages XML
  Language Scopes
  Code Generation Controls
  Code Generation Template Groups

Code Generation
  Added {|REMOVE_WHEN:IsTable|} token
  Added {|REMOVE_WHEN:IsView|} token
  Added {|FOR EACH VIEW|} token
  Added <|VIEW_NAME|> token
  Can now generate views and tables with no primary key for WPF applications
  Can now generate views and tables with no primary key for MVC applications
  Can now generate views and tables with no primary key for Web API MVC applications
  Can now generate views and tables with no primary key for Minimal Web API applications
  Can now generate views and tables with no primary key for .NET MAUI applications
  Can now generate views and tables with no primary key for Hard-Coded Repository classes
    Hard-Coded Repository now generates just those fields marked DisplayInTable and any Primary Key fields

XML Files
  Added <IsTable> and <IsView> to all Template XML files

Tables/Views Loading
  Can now see all tables and views in one list

Documentation: Updated all docs to reflect the above changes




PDSC Developer Utilities v9.0.2 - 11/9/2023
-----------------------------------------------------
Code Generation
  Added code to check for tables with multiple or no primary key columns
    Mark the table as not being able to be generated
  Display a reason why the table can not be generated
  If the table was previously saved, all the information is now re-loaded and the table is marked for generation
  Added Uncheck all tables check box
  If you uncheck all Search and Description fields, the code generator will not generate that table
  Created the appropriate XML entries and templates to work with SQL Server views

  

PDSC Developer Utilities v9.0.1 - 11/9/2023
-----------------------------------------------------
Computer Cleaner: Eliminated some messages to speed up the process, and to not pollute the log file
Strong named all the assemblies for the PDSC Developer Utilities
Fixed bug where the XML List screen was not cleared when displaying an XML edit screen
Add Property Generation Template XML file editing to XML List tool
Fixed problem where the Help file could not be found on some screens
Fixed bug where Guid Primary Key and String Primary key were not generating correctly
Fixed bug where Password columns were not displaying on the edit screen.


PDSC Developer Utilities v9.0.0 - 11/07/2023
-----------------------------------------------------
This is the first release of the PDSC Developer Utilities written in .NET 7
  Converted all DLLs and EXE to .NET 7
XML Generation: Fixed bug where the XSD file was not written to a file
All Generators: Added a 'Total Rows to Generate' field so you can just select a few rows from a table for JSON, XML or Hard-Coded Repository data
